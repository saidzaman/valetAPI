{
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-28T01:25:31.121Z",
    "end": "2024-11-28T01:25:49.090Z",
    "duration": 17969,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4607fe3f-b846-42f8-a0a2-f385d8fad7f4",
      "title": "",
      "fullFile": "cypress\\e2e\\observations.cy.js",
      "file": "cypress\\e2e\\observations.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
          "title": "Test Scenarios using valet API from the Bank of Canada",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Positive Case: Average rate for CAD to AUD in past recent 10 weeks",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Positive Case: Average rate for CAD to AUD in past recent 10 weeks",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// I created a command observationSeries (calling below) for code reusability as per the request.\ncy.observationsSeries('CAD', 'AUD', 10).then(response => {\n  expect(response.status).equal(200);\n  expect(response.body).to.have.property('terms');\n  expect(response.body).to.have.property('seriesDetail');\n  expect(response.body).to.have.property('observations');\n  var sum = 0;\n  var count = response.body.observations.length;\n  for (var i in response.body.observations) {\n    expect(response.body.observations[i]).to.have.property('d');\n    expect(response.body.observations[i]).to.have.property('FXCADAUD');\n    expect(response.body.observations[i].FXCADAUD).to.have.property('v');\n    sum += parseFloat(response.body.observations[i].FXCADAUD.v);\n  }\n  var avg = sum / count;\n  cy.task('log', '10-week average CAD -> AUD: ' + avg);\n});",
              "err": {},
              "uuid": "fcaeda75-45ab-4d56-9f62-9ff7f8249e18",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Positive Case: CAD to IDR in past recent 4 weeks",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Positive Case: CAD to IDR in past recent 4 weeks",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('CAD', 'IDR', 4).then(response => {\n  expect(response.status).equal(200);\n  expect(response.body).to.have.property('terms');\n  expect(response.body).to.have.property('seriesDetail');\n  expect(response.body).to.have.property('observations');\n  for (var i in response.body.observations) {\n    expect(response.body.observations[i]).to.have.property('d');\n    expect(response.body.observations[i]).to.have.property('FXCADIDR');\n    expect(response.body.observations[i].FXCADIDR).to.have.property('v');\n  }\n});",
              "err": {},
              "uuid": "537123f5-9cdb-495d-8ef7-c28e33de44a9",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Positive Case: Average rate for CAD to AUD in past recent 1000000000000000 weeks",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Positive Case: Average rate for CAD to AUD in past recent 1000000000000000 weeks",
              "timedOut": null,
              "duration": 14998,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('CAD', 'AUD', 1000000000000000).then(response => {\n  expect(response.status).equal(200);\n  expect(response.body).to.have.property('terms');\n  expect(response.body).to.have.property('seriesDetail');\n  expect(response.body).to.have.property('observations');\n  for (var i in response.body.observations) {\n    expect(response.body.observations[i]).to.have.property('d');\n    expect(response.body.observations[i]).to.have.property('FXCADAUD');\n    expect(response.body.observations[i].FXCADAUD).to.have.property('v');\n  }\n});",
              "err": {},
              "uuid": "0a77faba-5fef-4f25-8dbe-7998b18afe07",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative case: Currency1 and Currency2 is missing",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Negative case: Currency1 and Currency2 is missing",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('', '', 10).then(response => {\n  expect(response.body.message).equal(\"Series FX not found.\");\n  expect(response.status).equal(404);\n});",
              "err": {},
              "uuid": "3f4786ff-2e2a-486d-9d1f-2900385e0d49",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative case: Currency1 is missing",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Negative case: Currency1 is missing",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('', 'AUD', 10).then(response => {\n  expect(response.body.message).equal(\"Series FXAUD not found.\");\n  expect(response.status).equal(404);\n});",
              "err": {},
              "uuid": "889a1f85-a474-438a-aebc-8dd5966a34a6",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative case: Currency2 is missing",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Negative case: Currency2 is missing",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('CAD', '', 10).then(response => {\n  expect(response.body.message).equal(\"Series FXCAD not found.\");\n  expect(response.status).equal(404);\n});",
              "err": {},
              "uuid": "c3bbdf1a-874c-48d3-8a1a-ddb4eac88aa7",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative case: Currency1 and Currency2 is missing and value for number of recent weeks is 0",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Negative case: Currency1 and Currency2 is missing and value for number of recent weeks is 0",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('', '', 0).then(response => {\n  expect(response.body.message).equal(\"Bad recent observations request parameters, you cannot have a recent value less than one\");\n  expect(response.status).equal(400);\n});",
              "err": {},
              "uuid": "d49c7353-dbef-4386-b3fd-f3b294b1bccf",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative case: Valid currency1 and currency2 but value for number recent week is 0",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Negative case: Valid currency1 and currency2 but value for number recent week is 0",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('CAD', 'AUD', 0).then(response => {\n  expect(response.body.message).equal(\"Bad recent observations request parameters, you cannot have a recent value less than one\");\n  expect(response.status).equal(400);\n});",
              "err": {},
              "uuid": "d5fd7617-d2f0-4ae2-bc21-ff9d970821fc",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative case: Invalid currency1 and currency2",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Negative case: Invalid currency1 and currency2",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('XXX', 'XXX', 10).then(response => {\n  expect(response.body.message).equal(\"Series FXXXXXXX not found.\");\n  expect(response.status).equal(404);\n});",
              "err": {},
              "uuid": "8d3c23ad-bd7f-4b9d-a307-0b49c5a3a74f",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative case: Valid currency1 and currency2 but negative value for recent number of weeks",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Negative case: Valid currency1 and currency2 but negative value for recent number of weeks",
              "timedOut": null,
              "duration": 434,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('CAD', 'AUD', -1).then(response => {\n  expect(response.body.message).equal(\"Bad recent observations request parameters, you cannot have a recent value less than one\");\n  expect(response.status).equal(400);\n});",
              "err": {},
              "uuid": "73878dc0-8eca-4ace-831c-4acbf9fbdcf8",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative case: currency1 is same as currency2",
              "fullTitle": "Test Scenarios using valet API from the Bank of Canada Negative case: currency1 is same as currency2",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.observationsSeries('CAD', 'CAD', 10).then(response => {\n  expect(response.body.message).equal(\"Series FXCADCAD not found.\");\n  expect(response.status).equal(404);\n});",
              "err": {},
              "uuid": "bc8c88f0-ba86-481a-ba44-5eb6997a1b82",
              "parentUUID": "fdaf2814-f12e-4f74-95a2-8d8abf8e87b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fcaeda75-45ab-4d56-9f62-9ff7f8249e18",
            "537123f5-9cdb-495d-8ef7-c28e33de44a9",
            "0a77faba-5fef-4f25-8dbe-7998b18afe07",
            "3f4786ff-2e2a-486d-9d1f-2900385e0d49",
            "889a1f85-a474-438a-aebc-8dd5966a34a6",
            "c3bbdf1a-874c-48d3-8a1a-ddb4eac88aa7",
            "d49c7353-dbef-4386-b3fd-f3b294b1bccf",
            "d5fd7617-d2f0-4ae2-bc21-ff9d970821fc",
            "8d3c23ad-bd7f-4b9d-a307-0b49c5a3a74f",
            "73878dc0-8eca-4ace-831c-4acbf9fbdcf8",
            "bc8c88f0-ba86-481a-ba44-5eb6997a1b82"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17735,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}